# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2

defaults: &defaults
  docker:
  - image: circleci/golang:1.11

  #### TEMPLATE_NOTE: go expects specific checkout path representing url
  #### expecting it in the form of
  ####   /go/src/github.com/circleci/go-tool
  ####   /go/src/bitbucket.org/circleci/go-tool
  working_directory: /go/src/github.com/anticycle/anticycle

releasing: &releasing
  docker:
  - image: cibuilds/github:0.10

  working_directory: /go/src/github.com/anticycle/anticycle

jobs:
  build:
    <<: *defaults
    steps:
    - checkout
    - run:
        name: Build binaries
        command: make build
    - run:
        name: Download UPX 3.95
        command: |
          wget https://github.com/upx/upx/releases/download/v3.95/upx-3.95-amd64_linux.tar.xz
          tar -xJf upx-3.95-amd64_linux.tar.xz
    - run:
        # UPX support for windows arch amd64 is in experimental stage,
        # so we don't compress .exe files right now.
        # Check supported formats at https://en.wikipedia.org/wiki/UPX
        name: Compress binaries with UPX
        command: |
          ./upx-3.95-amd64_linux/upx --brute -q dist/anticycle-*.linux-amd64 \
                                                dist/anticycle-*.linux-arm \
                                                dist/anticycle-*.darwin-amd64
    - persist_to_workspace:
        root: dist
        paths:
        - .

  lint:
    <<: *defaults
    steps:
    - checkout
    - run:
        name: Download dependencies
        command: make devdeps
    - run:
        name: Run linters
        command: make lint

  unit-tests:
    <<: *defaults
    steps:
    - checkout
    - run:
        name: Run unit tests
        command: make test

  sanity-tests:
    <<: *defaults
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/artifacts
    - run:
        name: Move artifacts to executable path
        command: cp /tmp/artifacts/anticycle-*.linux-amd64 /go/bin/anticycle
    - run:
        name: Run sanity tests
        command: make test-sanity

  release:
    <<: *releasing
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/artifacts
    - run:
        name: Create tar balls
        command : ./build/tarball.sh /tmp/artifacts
    - run:
        name: Publish Release on GitHub
        command: |
          ghr -t ${GITHUB_TOKEN} \
              -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} \
              -c ${CIRCLE_SHA1} \
              -delete ${CIRCLE_TAG} /tmp/artifacts/release

workflows:
  version: 2
  build-test-release:
    jobs:
    - build:
        filters:
          tags:
            only: /.*/
    - unit-tests:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - lint:
        requires:
        - build
        filters:
          tags:
            only: /.*/
    - sanity-tests:
        requires:
        - build
        filters:
          tags:
            only: /.*/
# TODO (pawelzny): Add job: acceptance-tests with full coverage for CLI
#    - acceptance-tests:
#        requires:
#        - sanity-tests
    - release:
        requires:
        - unit-tests
        - lint
        - sanity-tests
#        - acceptance-tests
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /^v\d+\.\d+\.\d+(-(alpha|beta)(-\d+)?)?$/
